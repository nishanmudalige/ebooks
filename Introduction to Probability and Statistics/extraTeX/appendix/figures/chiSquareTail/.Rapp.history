N <- 350#
K <- 50#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(10, N-K, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N <- 350#
K <- 100#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(10, N-K, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 350#
K1 <- 50#
K2 <- 80#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 350#
K1 <- 50#
K2 <- 50#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 350#
K1 <- 40#
K2 <- 80#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 3500#
K1 <- 40#
K2 <- 800#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1500#
K1 <- 40#
K2 <- 800#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), 0.05)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1500#
K1 <- 40#
K2 <- 800#
lambda <- 0.5#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1500#
K1 <- 40#
K2 <- 800#
lambda <- 0.01#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- 1 + 55*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1500#
K1 <- 40#
K2 <- 800#
lambda <- 0.01#
beta   <- 0.5#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- beta + 1/lambda*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1500#
K1 <- 40#
K2 <- 800#
lambda <- 0.001#
beta   <- 0.5#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- beta + 1/lambda*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1500#
K1 <- 400#
K2 <- 800#
lambda <- 0.001#
beta   <- 0.5#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- beta + 1/lambda*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1000#
K1 <- 300#
K2 <- 300#
lambda <- 0.001#
beta   <- 0.5#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- beta + 1/lambda*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
N  <- 1000#
K1 <- 400#
K2 <- 400#
lambda <- 0.001#
beta   <- 0.5#
#
x <- 1:N#
y <- 70 - 4*x/N#
#
X <- list()#
Z <- list()#
W <- list()#
t <- seq(K1, N-K2, 2)#
for(i in 1:length(t)){#
	X[[i]] <- x#
	l <- which(x == t[i])#
	z <- rep(0, N)#
	z[l:N] <- beta + 1/lambda*dexp(1:(N+1-l), lambda)#
	Z[[i]] <- y - z#
#	W[[i]] <- 82 - abs(rep(i, length(X[[i]]))-70)+1#
	W[[i]] <- rep(1, length(X[[i]]))#
}#
#
par(mar=c(2.5, 2.5, 1, 1), las=1)#
plot(x,y, ylim=range(c(Z, recursive=TRUE)), type='l', col='#FF000066')#
for(i in 1:length(t)){#
		lines(X[[i]], Z[[i]], col='#00000022')#
}#
abline(lm(c(Z, recursive=TRUE) ~ c(X, recursive=TRUE), weights=c(W, recursive=TRUE)), col='#0000FF44')
g <- function(f){}#
h <- function(x){}#
f <- function(x,y){ x^2 + y^2 }#
#
system.time(for(i in 1:10^4) g(f))#
system.time(for(i in 1:10^4) h(1))
g <- function(f){}#
h <- function(x){}#
f <- function(x,y){ x^2 + y^2 }#
#
system.time(for(i in 1:10^5) g(f))#
system.time(for(i in 1:10^5) h(1))
g <- function(f){}#
h <- function(x){}#
f <- function(x,y){ x^2 + y^2 }#
#
system.time(for(i in 1:10^6) g(f))#
system.time(for(i in 1:10^6) h(1))
g <- function(f){ f(2, 3)}#
h <- function(x){ 2^2+3^2 }#
f <- function(x,y){ x^2 + y^2 }#
#
system.time(for(i in 1:10^6) g(f))#
system.time(for(i in 1:10^6){ h(1))
system.time(for(i in 1:10^6) h(1))
g <- function(f){ f(2, 3)}#
h <- function(x){ x<-2; y<-3; x^2+y^2 }#
f <- function(x,y){ x^2 + y^2 }#
#
system.time(for(i in 1:10^6) g(f))#
system.time(for(i in 1:10^6) h(1))
f <- function(x){ g(x) }#
g <- function(x){ x^2 }#
system.time(for(i in 1:10^5){ f(3) })#
system.time(for(i in 1:10^5){ g(3) })
f <- function(x){ g(x) }#
g <- function(x){ x^2 }#
system.time(for(i in 1:10^6){ f(3) })#
system.time(for(i in 1:10^6){ g(3) })
f <- function(x){ g(x) }#
g <- function(x){ x^2 }#
system.time(for(i in 1:10^6){ f(3) })#
f <- function(x){ x^2 }#
system.time(for(i in 1:10^6){ f(3) })
x <- c(5, 6, 4, 2, 1, 1, 5)#
y <- c(4, 9, 8, 7, 2, 4, 4)#
#
plot(x,y)
x <- c(5, 6, 4, 2, 1, 1, 5)#
y <- c(4, 9, 8, 7, 2, 4, 4)#
#
plot(x,y, type='l')
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 3, 4)#
#
plot(x,y, type='l')
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')#
points(3, 4)
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')#
points(3, 4)#
text(3, 4, 'y', pos=3)
s <- y - 4
s
sign(y - 4)
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')#
points(3, 4)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')#
points(3, 4.5)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))
4+runif(1,-10^-5, 10^-5)
runif(1,-10^-8, 10^-8)
4+runif(1,-10^-8, 10^-8)
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')#
points(3, 4)#
text(3, 4, 'y', pos=3)#
(s <- sign(y - 4+runif(1,-10^-8, 10^-8))
)
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
#
plot(x,y, type='l')#
points(3, 4.5)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))
diff(s)
which(diff(s) != 0)
cbind(x,y)
lines(xy[w[1]+0:1,])
(w <- which(diff(s) != 0))#
lines(xy[w[1]+0:1,])
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
xy <- cbind(x,y)#
#
plot(x,y, type='l')#
points(3, 4.5)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))#
(w <- which(diff(s) != 0))#
lines(xy[w[1]+0:1,])
lines(xy[w[1]+0:1,], lwd=3)
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
xy <- cbind(x,y)#
#
plot(x,y, type='l')#
points(3, 4.5)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))#
(w <- which(diff(s) != 0))#
lines(xy[w[1]+0:1,], lwd=3)#
lines(xy[w[2]+0:1,], lwd=3)
lines(c(1.5, 5.5), rep(4.5,2), lty=3)
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
xy <- cbind(x,y)#
#
plot(x,y, type='l')#
points(3, 4.5)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))#
(w <- which(diff(s) != 0))#
lines(xy[w[1]+0:1,], lwd=3)#
lines(xy[w[2]+0:1,], lwd=3)#
lines(c(1.5, 5.125), rep(4.5,2), lty=3)
a <- 5#
b <- 8#
#
theta <- rbeta(10^4, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b)
)
a <- 5#
b <- 8#
#
theta <- rbeta(10^4, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')
a <- 5#
b <- 8#
N <- 10^4#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- rgeom(N, theta)
x1[1:5]
matrix(rgeom(3*N, theta), 3)
matrix(thet), 3)
matrix(theta, 3)
matrix(rep(theta, 3), 3)
matrix(rep(theta, 3), N)
matrix(rgeom(3*N, theta), N)
theta[9796]
rgeom(10, 0.5)
apply(matrix(rgeom(3*N, theta), N), 2, sum)
apply(matrix(rgeom(3*N, theta), N), 1, sum)
a <- 5#
b <- 8#
N <- 10^4#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- a + 3#
X2PB <- b + x2
x2PA
X2PA
X1PA
X1PB
pbeta(theta, X1PA, X2PB)
sum(pbeta(theta, X1PA, X2PB) < 0.025)
sum(pbeta(theta, X1PA, X2PB) < 0.025)/N
x1l <- sum(pbeta(theta, X1PA, X2PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X2PB) > 0.975)/N#
x1l + x1u
x1l <- sum(pbeta(theta, X1PA, X1PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X1PB) > 0.975)/N#
x1l + x1u#
#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u
for(i in 1:N){#
}
a <- 5#
b <- 8#
N <- 10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- rep(a + 3, N)#
X2PB <- b + x2#
#
x1l <- sum(pbeta(theta, X1PA, X1PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X1PB) > 0.975)/N#
x1l + x1u#
#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u
a <- 5#
b <- 8#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- rep(a + 3, N)#
X2PB <- b + x2#
#
# Binomial#
# Actual Type 1 Error rate, projected 5%#
x1l <- sum(pbeta(theta, X1PA, X1PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X1PB) > 0.975)/N#
x1l + x1u#
#
# Geometric#
# Actual Type 1 Error rate, projected 5%#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u
x1l + x1u + c(-1,1)*1.96*sqrt(.05*0.95/N)
x2l + x2u + c(-1,1)*1.96*sqrt(.05*0.95/N)
a <- 5#
b <- 8#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- rep(a + 3, N)#
X2PB <- b + x2#
#
# Binomial#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x1l <- sum(pbeta(theta, X1PA, X1PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X1PB) > 0.975)/N#
x1l + x1u + c(-1,1)*1.96*sqrt(.05*0.95/N)#
# Geometric#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u + c(-1,1)*1.96*sqrt(.05*0.95/N)
a <- 25#
b <- 50#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)
a <- 1#
b <- 1#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)
a <- 2#
b <- 2#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)
a <- 3#
b <- 3#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)
a <- 4#
b <- 4#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)
a <- 4#
b <- 4#
N <- 5*10^5#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- rep(a + 3, N)#
X2PB <- b + x2#
#
# Binomial#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x1l <- sum(pbeta(theta, X1PA, X1PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X1PB) > 0.975)/N#
x1l + x1u + c(-1,1)*1.96*sqrt(.05*0.95/N)#
# Geometric#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u + c(-1,1)*1.96*sqrt(.05*0.95/N)
a <- 4#
b <- 4#
N <- 10^6#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
abline(h=0)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- rep(a + 3, N)#
X2PB <- b + x2#
#
# Binomial#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x1l <- sum(pbeta(theta, X1PA, X1PB) < 0.025)/N#
x1u <- sum(pbeta(theta, X1PA, X1PB) > 0.975)/N#
x1l + x1u + c(-1,1)*1.96*sqrt(.05*0.95/N)#
# Geometric#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u + c(-1,1)*1.96*sqrt(.05*0.95/N)
x1l
x1u
x2u
x2l
hist(theta)
hist(theta, breaks=50)
library(openintro)
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)
library(openintro)#
#
a <- 4#
b <- 4#
N <- 10^6#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)
library(openintro)#
#
a <- 4#
b <- 4#
N <- 10^6#
#
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE, xlab=expression(theta), ylab='density')#
abline(h=0)
theta <- rbeta(N, a, b)#
plot(seq(0, 1, 0.001), dbeta(seq(0, 1, 0.001), a, b), type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)
text('topleft', 'hello')
text(0, max(y)*.8, 'hello', pos=4)
library(openintro)#
#
a <- 4#
b <- 4#
N <- 10^6#
#
theta <- rbeta(N, a, b)#
x <- seq(0, 1, 0.001)#
y <- dbeta(x, a, b)#
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, 'hello', pos=4)
text(0, max(y)*.8, paste('Beta( ',a,', ',b,')', sep=''), pos=4)
library(openintro)#
#
a <- 4#
b <- 4#
N <- 10^6#
#
theta <- rbeta(N, a, b)#
x <- seq(0, 1, 0.001)#
y <- dbeta(x, a, b)#
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, paste('Beta( ',a,', ',b,')', sep=''), pos=4)
reject1 <- (pbeta(theta, X1PA, X1PB) < 0.025 |#
			pbeta(theta, X1PA, X1PB) > 0.975)#
sum(reject1)/N + c(-1,1)*1.96*sqrt(.05*0.95/N)
pbeta(theta, X1PA, X1PB) < 0.025
reject1l <- pbeta(theta, X1PA, X1PB) < 0.025#
reject1u <- pbeta(theta, X1PA, X1PB) > 0.975#
sum(reject1l + reject1u)/N + c(-1,1)*1.96*sqrt(.05*0.95/N)
reject1l
sum(reject1l)
sum(reject1u)
library(openintro)#
#
a <- 4#
b <- 4#
N <- 10^6#
#
theta <- rbeta(N, a, b)#
x <- seq(0, 1, 0.001)#
y <- dbeta(x, a, b)#
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, paste('Beta( ',a,', ',b,')', sep=''), pos=4)#
#
R <- rep(FALSE, N)#
#
x1 <- rbinom(N, 10, theta)#
x2 <- apply(matrix(rgeom(3*N, theta), N), 1, sum)#
#
X1PA <- a + x1#
X1PB <- b + (10-x1)#
#
X2PA <- rep(a + 3, N)#
X2PB <- b + x2#
#
# Binomial#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
reject1l <- pbeta(theta, X1PA, X1PB) < 0.025#
reject1u <- pbeta(theta, X1PA, X1PB) > 0.975#
sum(reject1l + reject1u)/N + c(-1,1)*1.96*sqrt(.05*0.95/N)
Geometric#
# Actual Type 1 Error rate, projected 5%#
# Bounds are for confidence on the error rate (95%)#
x2l <- sum(pbeta(theta, X2PA, X2PB) < 0.025)/N#
x2u <- sum(pbeta(theta, X2PA, X2PB) > 0.975)/N#
x2l + x2u + c(-1,1)*1.96*sqrt(.05*0.95/N)
reject2l <- pbeta(theta, X2PA, X2PB) < 0.025#
reject2u <- pbeta(theta, X2PA, X2PB) > 0.975#
sum(reject2l + reject2u)/N + c(-1,1)*1.96*sqrt(.05*0.95/N)
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, paste('Beta(',a,', ',b,')', sep=''), pos=4)
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, paste('Beta(',a,',',b,')', sep=''), pos=4)
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, paste('Beta(',a,',',b,')', sep=''), pos=4, cex=2)
plot(x, y, type='l', xlab=expression(theta), ylab='density')#
histPlot(theta, add=TRUE, breaks=50, border='#22558844', col='#22558816', probability=TRUE)#
abline(h=0)#
text(0, max(y)*.8, paste('Beta(',a,',',b,')', sep=''), pos=4, cex=1.5)
58.98 + 39.49
58.98 + 39.49 + 21.47 + 58.45 + (4.19 + 21.49)*1.07775
58.98 + 39.49 + 21.47 + 58.45 + (4.19 + 21.49)*1.0775
f <- function(x, y) return(x + y)#
integrand.f <- function(a, b) {#
   new.func <- function(y) (return(integrate(f(x,y), a, b)))#
   return(new.func)#
}#
solution <- integrate(integrand.f(a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(a, b) {#
   new.func <- function(y) (return(integrate(f(x,y), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
?integrate
f <- function(y, x) return(x + y)#
integrand.f <- function(a, b) {#
   new.func <- function(y) (return(integrate(f(y,x), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
integrate
f <- function(y, x) return(x + y)#
integrand.f <- function(a, b) {#
   new.func <- function(y) (return(integrate(f(y,x=x), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
integrate(function(x) x^2, 5, 10)
f <- function(x, y) return(x + y)#
integrand.f <- function(a, b) {#
   new.func <- function(y) (return(integrate(f(y,x=x), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(f, a, b) {#
   new.func <- function(y) (return(integrate(f(x, y), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(f, a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(y, f, a, b) {#
   new.func <- function(y) (return(integrate(f(x, y), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(y, f, a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(a, b) {#
   new.func <- function(y) (return(integrate(function(x) f(x,y), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(y, a, b) {#
   new.func <- function(y) (return(integrate(f(x,y), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(y, a, b) {#
   new.func <- function(y) (return(integrate(function(x,y=y) f(x,y), a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(a, b) {#
   g <- function(x,y=y) f(x,y)#
   new.func <- function(y) (return(integrate(g, a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
a <- 0#
b <- 1#
c <- 0#
d <- 1#
#
f <- function(x, y) return(x + y)#
integrand.f <- function(a, b) {#
   g <- function(x,y=x) f(x,y)#
   new.func <- function(y) (return(integrate(g, a, b)))#
   return(new.func)#
}#
#
solution <- integrate(integrand.f(a, b), c, d)
160 + 26.60 + 25.51
x <- c(5, 6, 4, 2, 1, 2, 5)#
y <- c(4, 9, 8, 7, 2, 1, 4)#
xy <- cbind(x,y)#
#
plot(x,y, type='l')#
points(3, 4.5)#
text(3, 4.5, 'y', pos=3)#
(s <- sign(y - 4.5))#
(w <- which(diff(s) != 0))#
lines(xy[w[1]+0:1,], lwd=3)#
lines(xy[w[2]+0:1,], lwd=3)#
lines(c(1.5, 5.125), rep(4.5,2), lty=3)
seq(0, 1, length=1)
480*.31
plot(1:50)
qchisq(0.95, 3)
qchisq(0.9, 3)
qchisq(0.8, 3)
qchisq(c(0.9, 0.95, 0.99), 1)
qchisq(c(0.9, 0.95, 0.99), 2)
qchisq(c(0.9, 0.95, 0.99), 3)
qchisq(c(0.9, 0.95, 0.99), 4)
qchisq(c(0.9, 0.95, 0.99), 5)
qchisq(c(0.9, 0.95, 0.99), 6)
qchisq(c(0.9, 0.95, 0.99), 7)
qchisq(c(0.9, 0.95, 0.99), 8)
qchisq(c(0.9, 0.95, 0.99), 9)
qchisq(c(0.8, 0.9, 0.95, 0.99), 1)
qchisq(0.8, 1:15)
1.65*1.65
library(openintr)
library(openintro)
library(help=openintro)
?normTail
pdf('chiSquareAreaAbove6Point25WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
these <- which(x > 6.25)#
plot(x, y, type='l')#
dev.off()
pdf('chiSquareAreaAbove6Point25WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
these <- which(x > 6.25)#
plot(x, y, type='l')#
abline(h=0)#
dev.off()
pdf('chiSquareAreaAbove6Point25WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
these <- which(x > 6.25)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
dev.off()
pdf('chiSquareAreaAbove6Point25WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 6.25)#
X <- x[these[1], these, rev(these)[1]]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
these
pdf('chiSquareAreaAbove6Point25WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 6.25)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
pchisq(8, 2)
pdf('chiSquareAreaAbove8WithDF2.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 2)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 8)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove8WithDF2.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 2.2)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 8)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove8WithDF4.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 4)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 8)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove10WithDF4.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 4)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 8)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove10WithDF4.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 4)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 10)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#22558833', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove10WithDF4.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 4)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 10)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove6Point25WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 6.25)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove4WithDF2.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 2)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 5)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove4WithDF2.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 2)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 4)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove4Point3WithDF2.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 2)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 4.3)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove9Point21WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 9.21)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove9Point21WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3.5)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 9.21)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
pdf('chiSquareAreaAbove9Point21WithDF3.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
y <- dchisq(x, 3)#
plot(x, y, type='l', axes=FALSE)#
abline(h=0)#
axis(1)#
#
these <- which(x > 9.21)#
X <- x[c(these[1], these, rev(these)[1])]#
Y <- c(0, y[these], 0)#
polygon(X, Y, col='#2277AA33', border='#00000044')#
#
dev.off()
COL <- c('#225588', '#AA5588', '#AAEE88')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(2, 4, 7)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(4, 15, 30)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#AA5588', '#AAEE88')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(2, 4, 7)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 15, 30)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#AA5588', '#AAEE88')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(2, 4, 7)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
y
COL
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(2, 4, 7)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)
DF
length(DF)
i
lines(x, y[[i]], lty=i, col=COL[i])
COL <- c('#225588', '#558822AA', '#88225577')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(2, 4, 7)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822AA', '#88225577')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 15, 0.05)#
DF <- c(2, 4, 7)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=2)#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822AA', '#88225577')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 25, 0.05)#
DF <- c(2, 4, 7, 15)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=2)#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822AA', '#88225577', '#88552244')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 25, 0.05)#
DF <- c(2, 4, 7, 15)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=2)#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822AA', '#88225577', '#88552244')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 35, 0.05)#
DF <- c(2, 4, 7, 15)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=2)#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822AA', '#88225577', '#88552244')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 35, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=2)#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 35, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=2)#
}#
abline(h=0)#
axis(1)#
#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 35, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i)#
}#
abline(h=0)#
axis(1)#
#
legend#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 5, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 35, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF, 'DF'))#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
?legend
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF, 'DF'), text.width=2)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF, 'DF'), text.width=4)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF, 'DF'), text.width=4, title='Degrees of Freedom')#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom')#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', xjust=0.5)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', xjust=1)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', adj=2)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', adj=4)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', adj=0)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Deg. of Freedom', adj=0)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', xpd=2)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', xpd=5)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
'merge = TRUE' for merging lines & points:#
x <- seq(-pi, pi, len = 65)#
plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)#
points(x, cos(x), pch = 3, col = 4)#
lines(x, tan(x), type = "b", lty = 1, pch = 4, col = 6)#
title("legend(..., lty = c(2, -1, 1), pch = c(-1,3,4), merge = TRUE)",#
      cex.main = 1.1)#
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3,4,6),#
       text.col = "green4", lty = c(2, -1, 1), pch = c(-1, 3, 4),#
       merge = TRUE, bg = 'gray90')
'merge = TRUE' for merging lines & points:#
x <- seq(-pi, pi, len = 65)#
plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)#
points(x, cos(x), pch = 3, col = 4)#
lines(x, tan(x), type = "b", lty = 1, pch = 4, col = 6)#
title("legend(..., lty = c(2, -1, 1), pch = c(-1,3,4), merge = TRUE)",#
      cex.main = 1.1)#
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3,4,6),#
       text.col = "green4", lty = c(2, -1, 1), pch = c(-1, 3, 4),#
       merge = TRUE, bg = 'gray90')
right-justifying a set of labels: thanks to Uwe Ligges#
x <- 1:5; y1 <- 1/x; y2 <- 2/x#
plot(rep(x, 2), c(y1, y2), type="n", xlab="x", ylab="y")#
lines(x, y1); lines(x, y2, lty=2)#
temp <- legend("topright", legend = c(" ", " "),#
               text.width = strwidth("1,000,000"),#
               lty = 1:2, xjust = 1, yjust = 1,#
               title = "Line Types")#
text(temp$rect$left + temp$rect$w, temp$text$y,#
     c("1,000", "1,000,000"), pos=2)
--- log scaled Examples ------------------------------#
leg.txt <- c("a one", "a two")#
#
par(mfrow = c(2,2))#
for(ll in c("","x","y","xy")) {#
  plot(2:10, log=ll, main=paste("log = '",ll,"'", sep=""))#
  abline(1,1)#
  lines(2:3,3:4, col=2) ##
  points(2,2, col=3)    ##
  rect(2,3,3,2, col=4)#
  text(c(3,3),2:3, c("rect(2,3,3,2, col=4)",#
                     "text(c(3,3),2:3,\"c(rect(...)\")"), adj = c(0,.3))#
  legend(list(x=2,y=8), legend = leg.txt, col=2:3, pch=1:2,#
         lty=1, merge=TRUE)#, trace=TRUE)#
}#
par(mfrow=c(1,1))
--- log scaled Examples ------------------------------#
leg.txt <- c("a one", "a two")#
#
par(mfrow = c(2,2))#
for(ll in c("","x","y","xy")) {#
  plot(2:10, log=ll, main=paste("log = '",ll,"'", sep=""))#
  abline(1,1)#
  lines(2:3,3:4, col=2) ##
  points(2,2, col=3)    ##
  rect(2,3,3,2, col=4)#
  text(c(3,3),2:3, c("rect(2,3,3,2, col=4)",#
                     "text(c(3,3),2:3,\"c(rect(...)\")"), adj = c(0,.3))#
  legend(list(x=2,y=8), legend = leg.txt, col=2:3, pch=1:2,#
         lty=1, merge=TRUE)#, trace=TRUE)#
}#
par(mfrow=c(1,1))
'Filled' boxes -- for more, see example(plot.factor)#
op <- par(bg="white") # to get an opaque box for the legend#
plot(cut(weight, 3) ~ group, data = PlantGrowth, col = NULL,#
     density = 16*(1:3))#
par(op)
Using 'ncol' :#
x <- 0:64/64#
matplot(x, outer(x, 1:7, function(x, k) sin(k * pi * x)),#
        type = "o", col = 1:7, ylim = c(-1, 1.5), pch = "*")#
op <- par(bg="antiquewhite1")#
legend(0, 1.5, paste("sin(", 1:7, "pi * x)"), col=1:7, lty=1:7,#
       pch = "*", ncol = 4, cex = 0.8)#
legend(.8,1.2, paste("sin(", 1:7, "pi * x)"), col=1:7, lty=1:7,#
       pch = "*", cex = 0.8)#
legend(0, -.1, paste("sin(", 1:4, "pi * x)"), col=1:4, lty=1:4,#
       ncol = 2, cex = 0.8)#
legend(0, -.4, paste("sin(", 5:7, "pi * x)"), col=4:6,  pch=24,#
       ncol = 2, cex = 1.5, lwd = 2, pt.bg = "pink", pt.cex = 1:3)#
par(op)
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', cex=2)#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom')#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE))*0.7, axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom')#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDFSmall.pdf', 6, 3)#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE))*0.5, axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom')#
dev.off()#
#
pdf('chiSquareDistributionWithInceasingDFLarge.pdf', 5, 3)#
COL <- c(COL, COL[1])#
par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 50, 0.1)#
DF <- c(4, 10, 20)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE)), axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i])#
}#
abline(h=0)#
axis(1)#
#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDF.pdf', 6, 3)#
par(mar=c(2, 0.5, 1, 0.5), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE))*0.5, axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom')#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDF.pdf', 6, 3)#
par(mar=c(2, 0.5, 1, 0.5), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE))*0.5, axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', cex=1.2)#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDF.pdf', 6, 3)#
par(mar=c(2, 0.5, 1, 0.5), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE))*0.42, axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', cex=1.2)#
dev.off()
COL <- c('#225588', '#558822CC', '#88225599', '#88552266')#
#
pdf('chiSquareDistributionWithInceasingDF.pdf', 6, 3)#
par(mar=c(2, 0.5, 1, 0.5), mgp=c(2.1, 0.8, 0), las=1)#
x <- seq(0, 40, 0.05)#
DF <- c(2, 4, 8, 17)#
y <- list()#
for(i in 1:length(DF)){#
	y[[i]] <- dchisq(x, DF[i])#
}#
plot(0, 0, type='n', xlim=range(x), ylim=range(c(y, recursive=TRUE))*0.47, axes=FALSE)#
for(i in 1:length(DF)){#
	lines(x, y[[i]], lty=i, col=COL[i], lwd=i/1.5)#
}#
abline(h=0)#
axis(1)#
#
legend('topright', lwd=1:4/1.5, col=COL, lty=1:4, legend=paste(DF ), title='Degrees of Freedom', cex=1.2)#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(1.3,1,0.5,1), mgp=c(3,-0.2,0), mfrow=c(1,2))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5,0,5), label=c(-5,'negative Z',5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(1.3,1,0.5,1), mgp=c(3,-0.2,0), mfrow=c(1,2))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=F, xlim=c(-3.4,3.4))#
axis(1, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(1.3,1,0.5,1), mgp=c(3,-0.2,0), mfrow=c(1,2))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=F)#
axis(1, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(1.3,1,0.5,1), mgp=c(3,-0.2,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=F)#
axis(1, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(1.3,1,0.5,1), mgp=c(3,-0.2,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=F)#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(1.3,1,0.5,1), mgp=c(3,0.8,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=FALSE)#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(2,1,0.5,1), mgp=c(3,0.8,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=FALSE)#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X <= -0.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 5, 3)#
#===> plot <===##
par(las=1, mar=c(2,1,0.5,1), mgp=c(3,0.8,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=FALSE)#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X >= 5.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
DF <- c(seq(0.5, 3, 0.5), 4:20, 25, 30, 35, 50)
DF
length(DF)
DF    <- c(seq(0.5, 3, 0.5), 4:20, 25, 30, 35, 50)#
tails <- c(0.3, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.001)#
#
cst <- matrix(NA, length(DF), length(tails))
cst
DF    <- c(seq(0.5, 3, 0.5), 4:20, 25, 30, 35, 50)#
tails <- c(0.3, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.001)#
#
cst <- matrix(NA, length(DF), length(tails))#
for(i in 1:nrow(cst)){#
	for(j in 1:ncol(cst)){#
		cst[i,j] <- round(qchisq(1-tails[j], DF[i]), 2)#
	}#
}
cst
colnames(cst) <- tails#
row.names(cst) <- DF
cst
library(xtable)
xtable(cst)
library(xtable)#
#
DF    <- c(seq(0.5, 3, 0.5), 4:20, 25, 30, 40, 50)#
tails <- c(0.3, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.001)#
#
cst <- matrix(NA, length(DF), length(tails))#
for(i in 1:nrow(cst)){#
	for(j in 1:ncol(cst)){#
		cst[i,j] <- round(qchisq(1-tails[j], DF[i]), 2)#
	}#
}#
colnames(cst) <- tails#
row.names(cst) <- DF#
#
xtable(cst)
pdf('chiSquareTail.pdf', 4, 2.4)#
#===> plot <===##
par(las=1, mar=c(2,1,0.5,1), mgp=c(3,0.8,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=FALSE)#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X >= 5.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
pdf('chiSquareTail.pdf', 3.5, 2.1)#
#===> plot <===##
par(las=1, mar=c(2,1,0.5,1), mgp=c(3,0.8,0), mfrow=c(1,1))#
X <- seq(0,15,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=FALSE)#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X >= 5.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col='#CCCCCC')#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col='#CCCCCC', lty=3)#
#
dev.off()
library(openintro)#
data(COL)#
#
pdf('chiSquareTail.pdf', 3.5, 2.1)#
#===> plot <===##
par(las=1, mar=c(2,1,0.5,1), mgp=c(3,0.8,0), mfrow=c(1,1))#
X <- seq(0,25,0.05)#
Y <- dchisq(X, 3.5)#
#
plot(X, Y, type='l', axes=FALSE, xlim=c(0,15))#
axis(1) #, at=c(-5,0,5), cex.axis=0.7, tick=FALSE)#
these <- which(X >= 5.8)#
polygon(c(X[these[1]], X[these],X[rev(these)[1]]), c(0,Y[these],0), col=COL[1])#
lines(X, Y)#
abline(h=0)#
lines(c(0,0), dnorm(0)*c(0.01,0.99), col=COL[1], lty=3)#
#
dev.off()
