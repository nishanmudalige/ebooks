tempdir()
?anova
require(graphics); require(utils)#
example(step)#-> swiss#
add1(lm1, ~ I(Education^2) + .^2)#
drop1(lm1, test="F")  # So called 'type II' anova#
#
example(glm)#
drop1(glm.D93, test="Chisq")#
drop1(glm.D93, test="F")
?anova.lm
sequential table#
fit <- lm(sr ~ ., data = LifeCycleSavings)#
anova(fit)#
#
## same effect via separate models#
fit0 <- lm(sr ~ 1, data = LifeCycleSavings)#
fit1 <- update(fit0, . ~ . + pop15)#
fit2 <- update(fit1, . ~ . + pop75)#
fit3 <- update(fit2, . ~ . + dpi)#
fit4 <- update(fit3, . ~ . + ddpi)#
anova(fit0, fit1, fit2, fit3, fit4, test="F")
summary(fit)
anova(fit)
anova(lm(totalPr ~ duration + cond + stockPhoto + wheels, d))
summary(lm(totalPr ~ duration, d))
anova(lm(totalPr ~ duration, d))
anova(lm(totalPr ~ duration + wheels, d))
summary(lm(totalPr ~ duration + wheels, d))
summary(lm(totalPr ~ wheels + duration, d))
anova(lm(totalPr ~ wheels + duration, d))
fit1 <- lm(totalPr ~ duration + cond + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ cond + stockPhoto + wheels, d), lm(totalPr ~ ., d)#
anova(fit1, fit2)
fit1 <- lm(totalPr ~ duration + cond + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ cond + stockPhoto + wheels, d)#
anova(fit1, fit2)
summary(lm(totalPr ~ ., d))#
fit1 <- lm(totalPr ~ duration + cond + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ cond + stockPhoto + wheels, d)#
anova(fit1, fit2)
fit1 <- lm(totalPr ~ cond + stockPhoto, d)#
fit2 <- lm(totalPr ~ cond, d)#
anova(fit1, fit2)
summary(fit1)
fit1 <- lm(totalPr ~ cond + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
summary(fit)
summary(lm(totalPr ~ ., d))
lm(totalPr ~ cond, d)
lm(totalPr ~ (cond == "new"), d)
library(openintro)#
data(marioKart)#
toss     <- which(marioKart$totalPr > 80)#
keep     <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d        <- marioKart[-toss, keep]#
d$cond   <- d$cond == "new"#
d$shipSp <- as.character(d$shipSp)#
these    <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$cond    <- d$cond == "new"#
thisOne   <- names(d) == "new"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$cond    <- d$cond == "new"#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$cond    <- d$cond == "new" + 1#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
(d$cond == "new") + 1
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
summary(lm(totalPr ~ condNew, d))
summary(lm(totalPr ~ stockPhoto, d))
summary(lm(totalPr ~ ., d))
library(xtable)
xtable(d)
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
summary(lm(totalPr ~ ., d))
summary(lm(totalPr ~ condNew, d))
cor(d$condNew, d$stockPhoto)
class(d$condNew)
class(d$stockPhoto)
(d$stockPhoto)
d$stockPhoto <- (d$stockPhoto == "yes")
cor(d$condNew, d$stockPhoto)
summary(lm(totalPr ~ condNew + stockPhoto, d))
xtable(summary(lm(totalPr ~ condNew + stockPhoto, d)))
library(xtable)
xtable(summary(lm(totalPr ~ condNew + stockPhoto, d)))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes")#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "duration", "cond", "stockPhoto", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
xtable(summary(lm(totalPr ~ condNew + stockPhoto, d)))
summary(lm(totalPr ~ ., d))
xtable(summary(lm(totalPr ~ ., d)))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
d[1:5,]
xtable(summary(lm(totalPr ~ condNew + stockPhoto, d)))
xtable(summary(lm(totalPr ~ ., d)))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
lm(totalPr ~ ., d) -> a
a$res
a$res[1]
names(a)
a$fit
36.21 + 5.13 + 1.08 -0.03*3 + 7.29
51.55 - (36.21 + 5.13 + 1.08 -0.03*3 + 7.29)
sum(a$fit)
var(a$fit)
var(d$totalPr)
59.72/83.06
summary(a)
dim(d)
sum(a$res)
a$res
var(a$res)
summary(a)
var(a$res)/83.06*140/136
1-var(a$res)/83.06*140/136
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ cond + stockPhoto + duration + wheels, d))
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))
summary(lm(totalPr ~ condNew + stockPhoto + wheels, d))
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))
library(xtable)
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))
xtable(summary(lm(totalPr ~ condNew + wheels, d)))
summary(lm(totalPr ~ condNew + wheels, d))
summary(lm(totalPr ~ condNew, d))
summary(lm(totalPr ~ stockPhoto, d))
summary(lm(totalPr ~ duration, d))
summary(lm(totalPr ~ wheels, d))
summary(lm(totalPr ~ condNew + wheels, d))
summary(lm(totalPr ~ duration + wheels, d))
summary(lm(totalPr ~ stockPhoto + wheels, d))
summary(lm(totalPr ~ stockPhoto + condNew + wheels, d))
summary(lm(totalPr ~ duration + condNew + wheels, d))
5.585 + c(-1.98, 1.98)*0.925
summary(lm(totalPr ~ condNew + wheels, d))
7.233 + c(-1.98, 1.98)*.542
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))
plot(fit)
xtable(summary(fit <- lm(totalPr ~ condNew + wheels + condNew*wheels, d)))
plot(fit)
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))
plot(fit)
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d[-115,])))
plot(fit)
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, dd)))
dd <- d[-115,]
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, dd)))
plot(fit)
dim(dd)
dim(d)
fit <- lm(totalPr ~ condNew + wheels, dd)
plot(fit)
fit <- lm(totalPr ~ condNew + wheels, dd)
plot(fit)
which(fit$fit > 60)
d[115,]
d[84,]
dd <- d[-113,]
fit <- lm(totalPr ~ condNew + wheels, dd)
plot(fit)
plot(fit$res ~ fit$fit)
lm(fit$res ~ fit$fit)
lm(fit$res ~ as.factor(fit$fit))
summary(lm(fit$res ~ as.factor(fit$fit)))
anova(lm(fit$res ~ as.factor(fit$fit)))
plot(fit)
plot(fit$res)
plot(dd$wheels, fit$res)
lm(fit$res ~ dd$wheels)
summary(lm(fit$res ~ I(dd$wheels^2)))
fit <- lm(totalPr ~ condNew + wheels + wheels^2, dd)
fit
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), dd)
summary(fit)
plot(fit)
which(fit$fit > 60)
dd[82,]
dd <- d[-82,]
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), dd)
summary(fit)
fit <- lm(totalPr ~ condNew + wheels, dd)
summary(fit)
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), dd)
plot(fit)
plot(fit$res ~ dd$condNew)
plot(fit)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))
fit1 <- lm(totalPr ~ duration + cond + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ cond + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ cond + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
?plot.lm
plot(fit)
plot(fit,1)
plot(fit,1, xlab="")
e <- fit$res#
f <- fit$fit
plot(f,e)
myPDF("mkDiagnosticEvsF.pdf")#
plot(f, e)#
#
dev.off()
myPDF("mkDiagnosticEvsF.pdf")#
plot(f, e, xlab="Fitted values", ylab="Residuals")#
#
dev.off()
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals")#
#
dev.off()
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals")#
rect(0,-50,100,50,col="#E5E5E5")#
points(f, e, col="#22558866")#
dev.off()
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals")#
rect(0,-50,100,50,col="#E5E5E5")#
points(f, e, col="#22558866", pch=20)#
dev.off()
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals")#
rect(-10,-50,100,50,col="#E5E5E5")#
points(f, e, col="#22558866", pch=20)#
dev.off()#
#
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals")#
rect(-10,-50,100,50,col="#E5E5E5")#
points(f, e, col="#22558866", pch=20)#
dev.off()
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals")#
rect(-10,-50,100,50,col="#E5E5E5")#
points(d$wheels, e, col="#22558866", pch=20)#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
plot(d$condNew, e, xlab="Number of wheels", ylab="Residuals")#
rect(-10,-50,100,50,col="#E5E5E5")#
points(d$condNew, e, col="#22558866", pch=20)#
dev.off()
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals")#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=2)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
dev.off()
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals")#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
dev.off()
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
dev.off()#
#
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
dev.off()#
#
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
plot(d$condNew, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
dev.off()
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
plot(d$condNew, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
box()#
dev.off()
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.5,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.5,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.5,0))#
plot(d$condNew, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
box()#
dev.off()#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
plot(d$condNew, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
box()#
dev.off()#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(d$condNew, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=0:1, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=0:1, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$condNew, e, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, col="#22558866", pch=20)#
box()#
dev.off()
boxPlot(e, d$condNew, add=1:2, col="#22558866", pch=20)
boxPlot(e, d$condNew, col="#22558866", pch=20)
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, col="#22558866", pch=20, axes=FALSE)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e, d$condNew, add=1:2, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e, d$condNew, TRUE, add=1:2, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e, d$condNew, TRUE, add=1:2+0.05, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], TRUE, add=1.05, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], TRUE, add=2.05, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, add=1.05, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, add=2.05, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsCond.pdf", mgp=c(2.5,0.6,0))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsWheel.pdf", mgp=c(2.5,0.6,0))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()
qqnorm(e, ylab="Residuals")
myPDF("mkDiagnosticNormalQuantilePlot.pdf", mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5, 5, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5, 4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()
myPDF("mkDiagnosticInOrder.pdf", 5, 4, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticInOrder.pdf", 5, 4, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsVariables.pdf", 5, 6, mgp=c(2.5,0.6,0), mfrow=c(2,1))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsVariables.pdf", 5, 6, mgp=c(2.2,0.6,0), mfrow=c(2,1))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsVariables.pdf", 5, 6, mgp=c(2,0.6,0), mfrow=c(2,1))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsVariables.pdf", 5, 6, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
myPDF("mkDiagnosticEvsSF.pdf", mgp=c(2.5,0.6,0))#
plot(f, sqrt(abs(e)), xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, sqrt(abs(e)), col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsSF.pdf", mgp=c(2.5,0.6,0))#
plot(f, sqrt(abs(e)), xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,2))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,2),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,1),col="#FFFFFF",lwd=1)#
points(f, sqrt(abs(e)), col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsSF.pdf", mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="|Residuals|", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsAbsF.pdf", mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558866", pch=20)#
box()#
dev.off()
myPDF("mkDiagnosticEvsVariables.pdf", 5, 6, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
dev.off()
acf(e)
myPDF("mkDiagnosticEvsVariables.pdf", 5, 6, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()
fit <- lm(totalPr ~ condNew + sqrt(wheels), d)#
#
plot(fit)
fit <- lm(totalPr ~ condNew + 1/wheels, d)#
#
plot(fit)
fit <- lm(totalPr ~ condNew + exp(wheels), d)#
#
plot(fit)
?houseRace10
data(houseRace10)#
hr <- table(houseRace10[,c("abbr", "party1")])#
nr <- apply(hr, 1, sum)#
data(prRace08)#
pr <- prRace08[,c("state", "pObama")]#
x  <- pr$pObama[pr$state != "DC"]#
y  <- (hr[,"Democrat"]+0.5)/(nr+1)#
#
x1 <- pr$pObama[match(houseRace10$abbr, pr$state)]#
y1 <- (houseRace10$party1 == "Democrat")+0#
#
plot(x, y, pch=19, cex=1.5, col="#22558844")#
X  <- seq(20, 80, 0.1)#
lo <- -5.6079 + 0.1009*X#
p  <- exp(lo)/(1+exp(lo))#
lines(X, p)#
points(x1, y1)
data(houseRace10)#
hr <- table(houseRace10[,c("abbr", "party1")])#
nr <- apply(hr, 1, sum)#
#
data(prRace08)#
pr <- prRace08[prRace08$state != "DC",c("state", "pObama")]#
hr <- hr[as.character(pr$state),]#
glm(hr ~ pr$pObama, family=binomial)#
#
x1 <- pr$pObama[match(houseRace10$abbr, pr$state)]#
y1 <- (houseRace10$party1 == "Democrat")+0#
g  <- glm(y1 ~ x1, family=binomial)#
x  <- pr$pObama[pr$state != "DC"]#
nr <- apply(hr, 1, sum)#
plot(x, hr[,"Democrat"]/nr, pch=19, cex=sqrt(nr), col="#22558844", xlim=c(20, 80), ylim=c(0, 1))#
X  <- seq(0, 100, 0.1)#
lo <- -5.6079 + 0.1009*X#
p  <- exp(lo)/(1+exp(lo))#
lines(X, p)#
abline(h=0:1, lty=2, col="#888888")
(fit <- glm(hr ~ pr$pObama, family=binomial))
plot(fit)
h4
hr
plot(fit)
fit <- lm(totalPr ~ condNew + exp(wheels), d)#
#
plot(fit)
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)
library
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 7.8, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 6, 5, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 7.8, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558866", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 7.8, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558866", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558866", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 7.8, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(3.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 0.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558888", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558888", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5, 5.3, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.1, 5.3/1.1, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.1, 5.3/1.1, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558888", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5/1.1, 5.3/1.1, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.1, 5.3/1.1, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.1, 5.3/1.1, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558888", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col="#22558888", pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col="#22558888", pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col="#E5E5E5")#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col="#22558888", pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))
g <- lm(totalPr ~ ., d)
g$R
summary(g)
names(summary(g))
names(summary(g))$adj.r.squ
names(summary(g))$adj.r.squared
summary(g)$adj.r.squared
g <- lm(totalPr ~ condNew + stockPhoto + duration + wheels, d)
summary(g)$adj.r.squared
summary(g)$adj.r.squared - 0.7107622
g <- lm(totalPr ~ ., d)
summary(g)$adj.r.squared - 0.7107622
lm(totalPr ~ condNew + stockPhoto + wheels, d) -> g
summary(g)$adj.r.squared
lm(totalPr ~ condNew + wheels, d) -> g
summary(g)$adj.r.squared
fit
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))
fit
summary(fit)
library(xtable)#
library(openintro)#
data(COL)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="")#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col=COL[1,2], pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col=COL[1,2], pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col=COL[1,2], pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col=COL[1,2], pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col=COL[1,2], pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col=COL[1,2], pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(COL)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="", col=COL[1,2])#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col=COL[1,2], pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col=COL[1,2], pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col=COL[1,2], pch=20)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col=COL[1,2], pch=20, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col=COL[1,2], pch=20, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col=COL[1,2], pch=20)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(COL)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="", col=COL[1,2], pch=19)#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col=COL[1,2], pch=19)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col=COL[1,2], pch=19)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col=COL[1,2], pch=19)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col=COL[1,2], pch=19, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col=COL[1,2], pch=19, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col=COL[1,2], pch=19)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
library(xtable)#
library(openintro)#
data(COL)#
data(marioKart)#
toss      <- which(marioKart$totalPr > 80)#
keep      <- c("totalPr", "cond", "stockPhoto", "duration", "wheels", "shipSp")#
d         <- marioKart[-toss, keep]#
d$stockPhoto <- (d$stockPhoto == "yes") + 0#
d$cond    <- (d$cond == "new") + 0#
thisOne   <- names(d) == "cond"#
names(d)[thisOne] <- "condNew"#
d$shipSp  <- as.character(d$shipSp)#
these     <- d$shipSp %in% c("firstClass", "priority", "parcel", "media")#
d$shipSp[these] <- "usps"#
these     <- d$shipSp %in% c("ups3Day", "upsGround")#
d$shipSp[these] <- "ups"#
these     <- d$shipSp %in% c("other", "standard")#
d$shipSp[these] <- "unknown"#
d$shipSp  <- as.factor(d$shipSp)#
d         <- d[,-which(colnames(d) == "shipSp")]#
#
summary(lm(totalPr ~ ., d))#
summary(lm(totalPr ~ condNew + stockPhoto + duration + wheels, d))#
xtable(summary(lm(totalPr ~ condNew + stockPhoto + wheels, d)))#
xtable(summary(fit <- lm(totalPr ~ condNew + wheels, d)))#
#
e <- fit$res#
f <- fit$fit#
#
myPDF("mkDiagnosticNormalQuantilePlot.pdf", 5.5, 4.4, mgp=c(2.5,0.6,0))#
qqnorm(e, ylab="Residuals", main="", col=COL[1,2], pch=19)#
dev.off()#
#
myPDF("mkDiagnosticInOrder.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(e, xlab="Order of collection", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,200,50,col=COL[7,3])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(e, col=COL[1,2], pch=19)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, e, xlab="Fitted values", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7,3])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, e, col=COL[1,2], pch=19)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsAbsF.pdf", 6.5/1.15, 5.3/1.15, mgp=c(2.5,0.6,0))#
plot(f, (abs(e)), xlab="Fitted values", ylab="Absolute value of residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,5))#
rect(-10,-50,100,50,col=COL[7,3])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(f, (abs(e)), col=COL[1,2], pch=19)#
box()#
dev.off()#
#
myPDF("mkDiagnosticEvsVariables.pdf", 6.5, 8.3, mgp=c(2,0.6,0), mfrow=c(2,1))#
par(mar=c(5.1, 3.1, 0.9, 0.5))#
boxPlot(e, d$condNew, xlab="Condition", ylab="Residuals", axes=FALSE)#
axis(1, at=1:2, c("Used", "New"))#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7,3])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
boxPlot(e, d$condNew, add=1:2, axes=FALSE)#
dotPlot(e[d$condNew==0], vertical=TRUE, at=1.05, add=TRUE, col=COL[1,2], pch=19, cex=0.7)#
dotPlot(e[d$condNew==1], vertical=TRUE, at=2.05, add=TRUE, col=COL[1,2], pch=19, cex=0.7)#
box()#
#
par(mar=c(3.8, 3.1, 2.2, 0.5))#
plot(d$wheels, e, xlab="Number of wheels", ylab="Residuals", axes=FALSE)#
axis(1)#
axis(2, seq(-10,10,10))#
rect(-10,-50,100,50,col=COL[7,3])#
abline(h=seq(-50,50,10),col="#FFFFFF",lwd=3)#
abline(h=seq(-50,50,5),col="#FFFFFF",lwd=1)#
points(d$wheels, e, col=COL[1,2], pch=19)#
box()#
dev.off()#
fit <- lm(totalPr ~ condNew + wheels + I(wheels^2), d)#
#
plot(fit)#
fit1 <- lm(totalPr ~ duration + condNew + stockPhoto + wheels, d)#
fit2 <- lm(totalPr ~ condNew + stockPhoto + wheels, d)#
anova(fit1, fit2)#
#
fit1 <- lm(totalPr ~ condNew + stockPhoto, d)#
fit2 <- lm(totalPr ~ stockPhoto, d)#
anova(fit1, fit2)
